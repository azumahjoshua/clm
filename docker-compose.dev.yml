services:
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: clm-backend
    volumes:
      - clm-storage:/var/www/storage
    networks:
      - clm-network
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    ports:
      - "8000:8000"  

  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: clm-frontend
    networks:
      - clm-network
    env_file:
      - ./front-end/.env
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend  
    volumes:
      - clm-frontend:/app

  # nginx:
  #   build:
  #     context: ./nginx  
  #     dockerfile: Dockerfile
  #   container_name: clm-nginx
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  
  #     - ./ssl:/etc/nginx/ssl  # SSL certificates (optional)
  #   networks:
  #     - clm-network
  #   depends_on:
  #     - backend  
  #   restart: unless-stopped

volumes:
  clm-storage:
  clm-bootstrap-cache:
  clm-frontend:

networks:
  clm-network:
    driver: bridge